name: CI in ubuntu
on:
  workflow_dispatch:
  pull_request:
  push:
    tags:
      - '*'
env:
  FORCE_COLOR: 1
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            node: 18
            host: x86
            target: x86
          - os: macos-m1
            node: 18
            host: arm64
            target: arm64
          - os: unbuntu-20.04
            host: x64
            target: x64
            node: 18
    name: ${{ matrix.os }} (host=${{ matrix.host }}, target=${{ matrix.target }})
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          architecture: ${{ matrix.host }}

      - name: Add yarn (self-hosted)
        if: matrix.os == 'macos-m1'
        run: npm install -g yarn

      - name: Add setuptools for Python 3.12 (temp)
        if: matrix.os != 'macos-m1'
        run: pip install setuptools

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.3
        if: contains(matrix.os, 'windows')
        with:
          msbuild-architecture: ${{ matrix.target }}

      - name: Install dependencies
        run: yarn install --ignore-scripts

      - name: Check Node compatibility
        run: node tools/semver-check.js

      - name: Add env vars
        shell: bash
        run: |
          echo "V=1" >> $GITHUB_ENV

          if [ "${{ matrix.target }}" = "x86" ]; then
            echo "TARGET=ia32" >> $GITHUB_ENV
          else
            echo "TARGET=${{ matrix.target }}" >> $GITHUB_ENV
          fi

      - name: Add Linux env vars
        if: contains(matrix.os, 'ubuntu')
        run: |
          echo "CFLAGS=${CFLAGS:-} -include ../src/gcc-preinclude.h" >> $GITHUB_ENV
          echo "CXXFLAGS=${CXXFLAGS:-} -include ../src/gcc-preinclude.h" >> $GITHUB_ENV

      - name: Build binaries
        run: yarn prebuild --arch ${{ env.TARGET }}

      - name: Print binary info
        if: contains(matrix.os, 'ubuntu')
        run: |
          ldd build/**/*.node
          echo "---"
          nm build/**/*.node | grep "GLIBC_" | c++filt || true
          echo "---"
          file build/**/*.node

      - name: Run tests
        run: yarn test

      - name: Upload binaries to commit artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node == 18
        with:
          name: prebuilt-binaries
          path: prebuilds/*
          retention-days: 7

      - name: Upload binaries to GitHub Release
        run: yarn upload --upload-all ${{ github.token }}
        if: matrix.node == 18 && startsWith(github.ref, 'refs/tags/')
